	.file	"vm_assembly.c"
# GNU C (Ubuntu 4.8.4-2ubuntu1~14.04) version 4.8.4 (x86_64-linux-gnu)
#	compiled by GNU C version 4.8.4, GMP version 5.1.3, MPFR version 3.1.2-p3, MPC version 1.0.1
# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
# options passed:  -I src/ -I src/peripherals/encoder/
# -I src/peripherals/movement/ -I src/peripherals/PWM/
# -I src/peripherals/serial/ -I src/peripherals/ultrasonic/
# -I src/ARCH/i386_OS/ -I /usr/local/include/jit/
# -imultiarch x86_64-linux-gnu -D ARCH=1 -D MEASURING=0 -D RUN_VM=1
# -D COUNTING=0 -D COUNTING_STACK=0 src/vm_assembly.c -mtune=generic
# -march=x86-64 -auxbase-strip vm.assembly -g -Os -std=c99 -fverbose-asm
# -fstack-protector -Wformat -Wformat-security
# options enabled:  -faggressive-loop-optimizations
# -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-reg
# -fcaller-saves -fcombine-stack-adjustments -fcommon -fcompare-elim
# -fcprop-registers -fcrossjumping -fcse-follow-jumps -fdefer-pop
# -fdelete-null-pointer-checks -fdevirtualize -fdwarf2-cfi-asm
# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
# -fforward-propagate -ffunction-cse -fgcse -fgcse-lm -fgnu-runtime
# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
# -fif-conversion -fif-conversion2 -findirect-inlining -finline
# -finline-atomics -finline-functions -finline-functions-called-once
# -finline-small-functions -fipa-cp -fipa-profile -fipa-pure-const
# -fipa-reference -fipa-sra -fira-hoist-pressure -fira-share-save-slots
# -fira-share-spill-slots -fivopts -fkeep-static-consts
# -fleading-underscore -fmath-errno -fmerge-constants -fmerge-debug-strings
# -fmove-loop-invariants -fomit-frame-pointer -foptimize-register-move
# -foptimize-sibling-calls -fpartial-inlining -fpeephole -fpeephole2
# -fprefetch-loop-arrays -free -freg-struct-return -fregmove
# -freorder-blocks -freorder-functions -frerun-cse-after-loop
# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
# -fsched-stalled-insns-dep -fschedule-insns2 -fshow-column -fshrink-wrap
# -fsigned-zeros -fsplit-ivs-in-unroller -fsplit-wide-types
# -fstack-protector -fstrict-aliasing -fstrict-overflow
# -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
# -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
# -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop
# -ftree-copyrename -ftree-cselim -ftree-dce -ftree-dominator-opts
# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-if-convert
# -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
# -ftree-parallelize-loops= -ftree-phiprop -ftree-pre -ftree-pta
# -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slp-vectorize
# -ftree-slsr -ftree-sra -ftree-switch-conversion -ftree-tail-merge
# -ftree-ter -ftree-vect-loop-version -ftree-vrp -funit-at-a-time
# -funwind-tables -fvar-tracking -fvar-tracking-assignments -fverbose-asm
# -fzero-initialized-in-bss -m128bit-long-double -m64 -m80387
# -maccumulate-outgoing-args -malign-stringops -mfancy-math-387
# -mfp-ret-in-387 -mfxsr -mglibc -mieee-fp -mlong-double-80 -mmmx -mno-sse4
# -mpush-args -mred-zone -msse -msse2 -mtls-direct-seg-refs

	.text
.Ltext0:
	.globl	advance_pc
	.type	advance_pc, @function
advance_pc:
.LFB16:
	.file 1 "src/vm_assembly.c"
	.loc 1 30 0
	.cfi_startproc
.LVL0:
	.loc 1 31 0
	movl	nPC(%rip), %eax	# nPC, nPC.0
	movl	%eax, PC(%rip)	# nPC.0, PC
	.loc 1 32 0
	addl	%edi, %eax	# offset, tmp63
	movl	%eax, nPC(%rip)	# tmp63, nPC
	ret
	.cfi_endproc
.LFE16:
	.size	advance_pc, .-advance_pc
	.globl	xor
	.type	xor, @function
xor:
.LFB17:
	.loc 1 35 0
	.cfi_startproc
	.loc 1 36 0
	movzbl	rt(%rip), %eax	# rt, D.2572
	movzbl	rs(%rip), %ecx	# rs, D.2572
	movzbl	rd(%rip), %edx	# rd, D.2572
	movl	RF(,%rax,4), %eax	# RF, D.2573
	xorl	RF(,%rcx,4), %eax	# RF, D.2573
	movl	%eax, RF(,%rdx,4)	# D.2573, RF
	ret
	.cfi_endproc
.LFE17:
	.size	xor, .-xor
	.globl	addi
	.type	addi, @function
addi:
.LFB18:
	.loc 1 39 0
	.cfi_startproc
	.loc 1 40 0
	movzbl	rs(%rip), %ecx	# rs, D.2576
	movswl	immediate(%rip), %eax	# immediate, D.2577
	movzbl	rt(%rip), %edx	# rt, D.2576
	addl	RF(,%rcx,4), %eax	# RF, D.2577
	movl	%eax, RF(,%rdx,4)	# D.2577, RF
	ret
	.cfi_endproc
.LFE18:
	.size	addi, .-addi
	.globl	lw
	.type	lw, @function
lw:
.LFB19:
	.loc 1 43 0
	.cfi_startproc
	.loc 1 44 0
	movzbl	rs(%rip), %eax	# rs, D.2580
	movswl	immediate(%rip), %edx	# immediate, D.2581
	movzbl	rt(%rip), %esi	# rt, D.2580
	addl	RF(,%rax,4), %edx	# RF, D.2581
	leal	3(%rdx), %eax	#, D.2581
	movl	%edx, %ecx	# D.2581, D.2581
	movzbl	VM_memory(%rcx), %ecx	# VM_memory, D.2581
	movzbl	VM_memory(%rax), %eax	# VM_memory, tmp112
	sall	$24, %ecx	#, D.2581
	orl	%ecx, %eax	# D.2581, tmp112
	leal	1(%rdx), %ecx	#, D.2581
	addl	$2, %edx	#, D.2581
	movzbl	VM_memory(%rdx), %edx	# VM_memory, D.2581
	movzbl	VM_memory(%rcx), %ecx	# VM_memory, D.2581
	sall	$8, %edx	#, D.2581
	sall	$16, %ecx	#, D.2581
	orl	%ecx, %eax	# D.2581, tmp112
	orl	%edx, %eax	# D.2581, tmp112
	movl	%eax, RF(,%rsi,4)	# tmp112, RF
	ret
	.cfi_endproc
.LFE19:
	.size	lw, .-lw
	.globl	fetch
	.type	fetch, @function
fetch:
.LFB21:
	.loc 1 137 0
	.cfi_startproc
.LVL1:
	.loc 1 138 0
	leal	3(%rdi), %eax	#, D.2586
.LVL2:
	movl	%edi, %edx	# PC, PC
	movzbl	VM_memory(%rdx), %edx	# VM_memory, D.2586
.LVL3:
	movzbl	VM_memory(%rax), %eax	# VM_memory, ret_val
.LVL4:
	sall	$24, %edx	#, D.2586
.LVL5:
	orl	%edx, %eax	# D.2586, ret_val
	leal	1(%rdi), %edx	#, D.2586
	movzbl	VM_memory(%rdx), %edx	# VM_memory, D.2586
	sall	$16, %edx	#, D.2586
	orl	%edx, %eax	# D.2586, ret_val
	leal	2(%rdi), %edx	#, D.2586
	movzbl	VM_memory(%rdx), %edx	# VM_memory, D.2586
	sall	$8, %edx	#, D.2586
	orl	%edx, %eax	# D.2586, ret_val
	.loc 1 140 0
	ret
	.cfi_endproc
.LFE21:
	.size	fetch, .-fetch
	.globl	vm_cpu
	.type	vm_cpu, @function
vm_cpu:
.LFB20:
	.loc 1 48 0
	.cfi_startproc
.LVL6:
	pushq	%rbx	#
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	.loc 1 55 0
	movl	%edi, PC(%rip)	# newPC, PC
	.loc 1 56 0
	movl	$4, nPC(%rip)	#, nPC
	.loc 1 57 0
	movl	$0, RF(%rip)	#, RF
	.loc 1 58 0
	movl	$1, RF+124(%rip)	#, RF
.LVL7:
.L16:
.LBB2:
	.loc 1 65 0
	movl	PC(%rip), %edi	# PC,
	call	fetch	#
.LVL8:
	.loc 1 69 0
	movl	%eax, %edx	# instr, D.2592
	.loc 1 67 0
	movl	%eax, %ecx	# instr, D.2592
	.loc 1 68 0
	movl	%eax, %esi	# instr, D.2592
	.loc 1 69 0
	shrl	$11, %edx	#, D.2592
	.loc 1 67 0
	shrl	$21, %ecx	#, D.2592
	.loc 1 68 0
	shrl	$16, %esi	#, D.2592
	.loc 1 69 0
	andl	$31, %edx	#, tmp93
	.loc 1 67 0
	andl	$31, %ecx	#, rs.13
	.loc 1 68 0
	andl	$31, %esi	#, rt.14
	.loc 1 69 0
	movb	%dl, rd(%rip)	# tmp93, rd
	.loc 1 66 0
	movl	%eax, %edx	# instr, D.2592
	.loc 1 67 0
	movb	%cl, rs(%rip)	# rs.13, rs
	.loc 1 66 0
	shrl	$26, %edx	#, D.2592
	.loc 1 68 0
	movb	%sil, rt(%rip)	# rt.14, rt
	.loc 1 70 0
	movw	%ax, immediate(%rip)	# instr, immediate
.LVL9:
	.loc 1 75 0
	cmpl	$8, %edx	#, D.2592
	je	.L8	#,
	jg	.L9	#,
	testl	%edx, %edx	# D.2592
	je	.L10	#,
	jmp	.L19	#
.L9:
	cmpl	$9, %edx	#, D.2592
	je	.L11	#,
	cmpl	$35, %edx	#, D.2592
	jne	.L19	#,
	.loc 1 119 0
	xorl	%eax, %eax	#
.LVL10:
	call	lw	#
.LVL11:
	jmp	.L19	#
.LVL12:
.L10:
.LBB3:
	.loc 1 79 0
	andl	$63, %eax	#, funct
.LVL13:
	.loc 1 81 0
	cmpb	$12, %al	#, funct
	je	.L13	#,
	cmpb	$38, %al	#, funct
	jne	.L19	#,
	.loc 1 84 0
	xorl	%eax, %eax	#
	call	xor	#
.LVL14:
	jmp	.L19	#
.L13:
	movzbl	RF+8(%rip), %edi	# RF, D.2592
	.loc 1 88 0
	call	syscall	#
.LVL15:
	testb	%al, %al	# D.2593
	setne	%bl	#, halted
	jmp	.L7	#
.LVL16:
.L8:
.LBE3:
	.loc 1 110 0
	xorl	%eax, %eax	#
.LVL17:
	call	addi	#
.LVL18:
	jmp	.L19	#
.LVL19:
.L11:
	.loc 1 115 0
	andl	$31, %ecx	#, D.2594
	cwtl
.LVL20:
	andl	$31, %esi	#, D.2594
	addl	RF(,%rcx,4), %eax	# RF, D.2592
	movl	%eax, RF(,%rsi,4)	# D.2592, RF
.L19:
.LBB4:
	.loc 1 81 0
	xorl	%ebx, %ebx	# halted
.L7:
.LVL21:
.LBE4:
	.loc 1 130 0
	movl	$4, %edi	#,
	call	advance_pc	#
.LVL22:
.LBE2:
	.loc 1 63 0
	testb	%bl, %bl	# halted
	je	.L16	#,
	.loc 1 133 0
	popq	%rbx	#
	.cfi_def_cfa_offset 8
.LVL23:
	ret
	.cfi_endproc
.LFE20:
	.size	vm_cpu, .-vm_cpu
	.comm	immediate,2,2
	.comm	rs,1,1
	.comm	rd,1,1
	.comm	rt,1,1
	.globl	nPC
	.data
	.align 4
	.type	nPC, @object
	.size	nPC, 4
nPC:
	.long	4
	.globl	PC
	.bss
	.align 4
	.type	PC, @object
	.size	PC, 4
PC:
	.zero	4
	.globl	VM_memory
	.align 16
	.type	VM_memory, @object
	.size	VM_memory, 5120
VM_memory:
	.zero	5120
	.comm	RF,128,16
	.text
.Letext0:
	.file 2 "/usr/include/stdint.h"
	.file 3 "src/syscall.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x351
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF27
	.byte	0x1
	.long	.LASF28
	.long	.LASF29
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.long	.Ldebug_line0
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF0
	.uleb128 0x3
	.long	.LASF2
	.byte	0x2
	.byte	0x25
	.long	0x3f
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.long	.LASF1
	.uleb128 0x3
	.long	.LASF3
	.byte	0x2
	.byte	0x26
	.long	0x51
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF4
	.uleb128 0x3
	.long	.LASF5
	.byte	0x2
	.byte	0x30
	.long	0x6a
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.long	.LASF6
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.long	.LASF7
	.uleb128 0x3
	.long	.LASF8
	.byte	0x2
	.byte	0x33
	.long	0x83
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.long	.LASF9
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF10
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF11
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF12
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF13
	.uleb128 0x5
	.long	.LASF16
	.byte	0x1
	.byte	0x1d
	.quad	.LFB16
	.quad	.LFE16-.LFB16
	.uleb128 0x1
	.byte	0x9c
	.long	0xd1
	.uleb128 0x6
	.long	.LASF15
	.byte	0x1
	.byte	0x1d
	.long	0x46
	.uleb128 0x1
	.byte	0x55
	.byte	0
	.uleb128 0x7
	.string	"xor"
	.byte	0x1
	.byte	0x23
	.quad	.LFB17
	.quad	.LFE17-.LFB17
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x8
	.long	.LASF14
	.byte	0x1
	.byte	0x27
	.quad	.LFB18
	.quad	.LFE18-.LFB18
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x7
	.string	"lw"
	.byte	0x1
	.byte	0x2b
	.quad	.LFB19
	.quad	.LFE19-.LFB19
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x9
	.long	.LASF30
	.byte	0x1
	.byte	0x88
	.long	0x78
	.quad	.LFB21
	.quad	.LFE21-.LFB21
	.uleb128 0x1
	.byte	0x9c
	.long	0x158
	.uleb128 0xa
	.string	"PC"
	.byte	0x1
	.byte	0x88
	.long	0x78
	.uleb128 0x1
	.byte	0x55
	.uleb128 0xb
	.long	.LASF19
	.byte	0x1
	.byte	0x8a
	.long	0x78
	.long	.LLST0
	.byte	0
	.uleb128 0x5
	.long	.LASF17
	.byte	0x1
	.byte	0x2f
	.quad	.LFB20
	.quad	.LFE20-.LFB20
	.uleb128 0x1
	.byte	0x9c
	.long	0x27f
	.uleb128 0xc
	.long	.LASF18
	.byte	0x1
	.byte	0x2f
	.long	0x78
	.long	.LLST1
	.uleb128 0xd
	.string	"opt"
	.byte	0x1
	.byte	0x2f
	.long	0x51
	.long	.LLST2
	.uleb128 0xe
	.string	"HI"
	.byte	0x1
	.byte	0x3b
	.long	0x78
	.byte	0
	.uleb128 0xe
	.string	"LO"
	.byte	0x1
	.byte	0x3b
	.long	0x78
	.byte	0
	.uleb128 0xf
	.long	.LASF15
	.byte	0x1
	.byte	0x3c
	.long	0x78
	.byte	0x4
	.uleb128 0xb
	.long	.LASF20
	.byte	0x1
	.byte	0x3d
	.long	0x5f
	.long	.LLST3
	.uleb128 0x10
	.quad	.LBB2
	.quad	.LBE2-.LBB2
	.uleb128 0xb
	.long	.LASF21
	.byte	0x1
	.byte	0x41
	.long	0x78
	.long	.LLST4
	.uleb128 0x11
	.string	"op"
	.byte	0x1
	.byte	0x42
	.long	0x5f
	.long	.LLST5
	.uleb128 0xb
	.long	.LASF22
	.byte	0x1
	.byte	0x47
	.long	0x78
	.long	.LLST6
	.uleb128 0x12
	.long	.Ldebug_ranges0+0
	.long	0x243
	.uleb128 0xb
	.long	.LASF23
	.byte	0x1
	.byte	0x4e
	.long	0x5f
	.long	.LLST7
	.uleb128 0xb
	.long	.LASF24
	.byte	0x1
	.byte	0x4f
	.long	0x5f
	.long	.LLST8
	.uleb128 0x13
	.quad	.LVL14
	.long	0xd1
	.uleb128 0x13
	.quad	.LVL15
	.long	0x343
	.byte	0
	.uleb128 0x13
	.quad	.LVL8
	.long	0x11b
	.uleb128 0x13
	.quad	.LVL11
	.long	0x103
	.uleb128 0x13
	.quad	.LVL18
	.long	0xea
	.uleb128 0x14
	.quad	.LVL22
	.long	0xa6
	.uleb128 0x15
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x1
	.byte	0x34
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x16
	.long	0x78
	.long	0x28f
	.uleb128 0x17
	.long	0x91
	.byte	0x1f
	.byte	0
	.uleb128 0x18
	.string	"RF"
	.byte	0x1
	.byte	0x14
	.long	0x27f
	.uleb128 0x9
	.byte	0x3
	.quad	RF
	.uleb128 0x16
	.long	0x5f
	.long	0x2b4
	.uleb128 0x19
	.long	0x91
	.value	0x13ff
	.byte	0
	.uleb128 0x1a
	.long	.LASF25
	.byte	0x1
	.byte	0x16
	.long	0x2a3
	.uleb128 0x9
	.byte	0x3
	.quad	VM_memory
	.uleb128 0x18
	.string	"PC"
	.byte	0x1
	.byte	0x18
	.long	0x78
	.uleb128 0x9
	.byte	0x3
	.quad	PC
	.uleb128 0x18
	.string	"nPC"
	.byte	0x1
	.byte	0x19
	.long	0x78
	.uleb128 0x9
	.byte	0x3
	.quad	nPC
	.uleb128 0x18
	.string	"rt"
	.byte	0x1
	.byte	0x1a
	.long	0x5f
	.uleb128 0x9
	.byte	0x3
	.quad	rt
	.uleb128 0x18
	.string	"rd"
	.byte	0x1
	.byte	0x1a
	.long	0x5f
	.uleb128 0x9
	.byte	0x3
	.quad	rd
	.uleb128 0x18
	.string	"rs"
	.byte	0x1
	.byte	0x1a
	.long	0x5f
	.uleb128 0x9
	.byte	0x3
	.quad	rs
	.uleb128 0x1a
	.long	.LASF26
	.byte	0x1
	.byte	0x1b
	.long	0x34
	.uleb128 0x9
	.byte	0x3
	.quad	immediate
	.uleb128 0x1b
	.long	.LASF31
	.byte	0x3
	.byte	0x26
	.long	0x5f
	.uleb128 0x1c
	.long	0x5f
	.byte	0
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x4109
	.byte	0
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x4109
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x410a
	.byte	0
	.uleb128 0x2
	.uleb128 0x18
	.uleb128 0x2111
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
.LLST0:
	.quad	.LVL1-.Ltext0
	.quad	.LVL2-.Ltext0
	.value	0x66
	.byte	0x75
	.sleb128 0
	.byte	0xc
	.long	0xffffffff
	.byte	0x1a
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x48
	.byte	0x24
	.byte	0x75
	.sleb128 1
	.byte	0xc
	.long	0xffffffff
	.byte	0x1a
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x40
	.byte	0x24
	.byte	0x21
	.byte	0x75
	.sleb128 2
	.byte	0xc
	.long	0xffffffff
	.byte	0x1a
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x38
	.byte	0x24
	.byte	0x21
	.byte	0x75
	.sleb128 3
	.byte	0xc
	.long	0xffffffff
	.byte	0x1a
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x21
	.byte	0x9f
	.quad	.LVL2-.Ltext0
	.quad	.LVL3-.Ltext0
	.value	0x60
	.byte	0x75
	.sleb128 0
	.byte	0xc
	.long	0xffffffff
	.byte	0x1a
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x48
	.byte	0x24
	.byte	0x75
	.sleb128 1
	.byte	0xc
	.long	0xffffffff
	.byte	0x1a
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x40
	.byte	0x24
	.byte	0x21
	.byte	0x75
	.sleb128 2
	.byte	0xc
	.long	0xffffffff
	.byte	0x1a
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x38
	.byte	0x24
	.byte	0x21
	.byte	0x70
	.sleb128 0
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x21
	.byte	0x9f
	.quad	.LVL3-.Ltext0
	.quad	.LVL4-.Ltext0
	.value	0x4b
	.byte	0x71
	.sleb128 0
	.byte	0x48
	.byte	0x24
	.byte	0x75
	.sleb128 1
	.byte	0xc
	.long	0xffffffff
	.byte	0x1a
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x40
	.byte	0x24
	.byte	0x21
	.byte	0x75
	.sleb128 2
	.byte	0xc
	.long	0xffffffff
	.byte	0x1a
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x38
	.byte	0x24
	.byte	0x21
	.byte	0x70
	.sleb128 0
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x21
	.byte	0x9f
	.quad	.LVL4-.Ltext0
	.quad	.LVL5-.Ltext0
	.value	0x51
	.byte	0x71
	.sleb128 0
	.byte	0x48
	.byte	0x24
	.byte	0x75
	.sleb128 1
	.byte	0xc
	.long	0xffffffff
	.byte	0x1a
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x40
	.byte	0x24
	.byte	0x21
	.byte	0x75
	.sleb128 2
	.byte	0xc
	.long	0xffffffff
	.byte	0x1a
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x38
	.byte	0x24
	.byte	0x21
	.byte	0x75
	.sleb128 3
	.byte	0xc
	.long	0xffffffff
	.byte	0x1a
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x21
	.byte	0x9f
	.quad	.LVL5-.Ltext0
	.quad	.LFE21-.Ltext0
	.value	0x66
	.byte	0x75
	.sleb128 0
	.byte	0xc
	.long	0xffffffff
	.byte	0x1a
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x48
	.byte	0x24
	.byte	0x75
	.sleb128 1
	.byte	0xc
	.long	0xffffffff
	.byte	0x1a
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x40
	.byte	0x24
	.byte	0x21
	.byte	0x75
	.sleb128 2
	.byte	0xc
	.long	0xffffffff
	.byte	0x1a
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x38
	.byte	0x24
	.byte	0x21
	.byte	0x75
	.sleb128 3
	.byte	0xc
	.long	0xffffffff
	.byte	0x1a
	.byte	0x3
	.quad	VM_memory
	.byte	0x22
	.byte	0x94
	.byte	0x1
	.byte	0x8
	.byte	0xff
	.byte	0x1a
	.byte	0x21
	.byte	0x9f
	.quad	0
	.quad	0
.LLST1:
	.quad	.LVL6-.Ltext0
	.quad	.LVL7-.Ltext0
	.value	0x1
	.byte	0x55
	.quad	.LVL7-.Ltext0
	.quad	.LFE20-.Ltext0
	.value	0x4
	.byte	0xf3
	.uleb128 0x1
	.byte	0x55
	.byte	0x9f
	.quad	0
	.quad	0
.LLST2:
	.quad	.LVL6-.Ltext0
	.quad	.LVL7-.Ltext0
	.value	0x1
	.byte	0x54
	.quad	.LVL7-.Ltext0
	.quad	.LFE20-.Ltext0
	.value	0x4
	.byte	0xf3
	.uleb128 0x1
	.byte	0x54
	.byte	0x9f
	.quad	0
	.quad	0
.LLST3:
	.quad	.LVL7-.Ltext0
	.quad	.LVL21-.Ltext0
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.quad	.LVL21-.Ltext0
	.quad	.LVL23-.Ltext0
	.value	0x1
	.byte	0x53
	.quad	0
	.quad	0
.LLST4:
	.quad	.LVL8-.Ltext0
	.quad	.LVL10-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL12-.Ltext0
	.quad	.LVL13-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL16-.Ltext0
	.quad	.LVL17-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	.LVL19-.Ltext0
	.quad	.LVL20-.Ltext0
	.value	0x1
	.byte	0x50
	.quad	0
	.quad	0
.LLST5:
	.quad	.LVL8-.Ltext0
	.quad	.LVL10-.Ltext0
	.value	0x5
	.byte	0x70
	.sleb128 0
	.byte	0x4a
	.byte	0x25
	.byte	0x9f
	.quad	.LVL12-.Ltext0
	.quad	.LVL13-.Ltext0
	.value	0x5
	.byte	0x70
	.sleb128 0
	.byte	0x4a
	.byte	0x25
	.byte	0x9f
	.quad	.LVL16-.Ltext0
	.quad	.LVL17-.Ltext0
	.value	0x5
	.byte	0x70
	.sleb128 0
	.byte	0x4a
	.byte	0x25
	.byte	0x9f
	.quad	.LVL19-.Ltext0
	.quad	.LVL20-.Ltext0
	.value	0x5
	.byte	0x70
	.sleb128 0
	.byte	0x4a
	.byte	0x25
	.byte	0x9f
	.quad	0
	.quad	0
.LLST6:
	.quad	.LVL9-.Ltext0
	.quad	.LVL10-.Ltext0
	.value	0x9
	.byte	0x70
	.sleb128 0
	.byte	0xc
	.long	0x3ffffff
	.byte	0x1a
	.byte	0x9f
	.quad	.LVL12-.Ltext0
	.quad	.LVL13-.Ltext0
	.value	0x9
	.byte	0x70
	.sleb128 0
	.byte	0xc
	.long	0x3ffffff
	.byte	0x1a
	.byte	0x9f
	.quad	.LVL16-.Ltext0
	.quad	.LVL17-.Ltext0
	.value	0x9
	.byte	0x70
	.sleb128 0
	.byte	0xc
	.long	0x3ffffff
	.byte	0x1a
	.byte	0x9f
	.quad	.LVL19-.Ltext0
	.quad	.LVL20-.Ltext0
	.value	0x9
	.byte	0x70
	.sleb128 0
	.byte	0xc
	.long	0x3ffffff
	.byte	0x1a
	.byte	0x9f
	.quad	0
	.quad	0
.LLST7:
	.quad	.LVL12-.Ltext0
	.quad	.LVL13-.Ltext0
	.value	0x7
	.byte	0x70
	.sleb128 0
	.byte	0x36
	.byte	0x25
	.byte	0x4f
	.byte	0x1a
	.byte	0x9f
	.quad	0
	.quad	0
.LLST8:
	.quad	.LVL12-.Ltext0
	.quad	.LVL13-.Ltext0
	.value	0x6
	.byte	0x70
	.sleb128 0
	.byte	0x8
	.byte	0x3f
	.byte	0x1a
	.byte	0x9f
	.quad	0
	.quad	0
	.section	.debug_aranges,"",@progbits
	.long	0x2c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.LBB3-.Ltext0
	.quad	.LBE3-.Ltext0
	.quad	.LBB4-.Ltext0
	.quad	.LBE4-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF31:
	.string	"syscall"
.LASF18:
	.string	"newPC"
.LASF16:
	.string	"advance_pc"
.LASF14:
	.string	"addi"
.LASF6:
	.string	"unsigned char"
.LASF27:
	.string	"GNU C 4.8.4 -mtune=generic -march=x86-64 -g -Os -std=c99 -fstack-protector"
.LASF7:
	.string	"short unsigned int"
.LASF10:
	.string	"long unsigned int"
.LASF30:
	.string	"fetch"
.LASF17:
	.string	"vm_cpu"
.LASF19:
	.string	"ret_val"
.LASF28:
	.string	"src/vm_assembly.c"
.LASF9:
	.string	"unsigned int"
.LASF22:
	.string	"address"
.LASF12:
	.string	"char"
.LASF5:
	.string	"uint8_t"
.LASF2:
	.string	"int16_t"
.LASF29:
	.string	"/home/alexandre/Codes/C/IniciacaoCientifica_PensamentoComputacional"
.LASF26:
	.string	"immediate"
.LASF3:
	.string	"int32_t"
.LASF11:
	.string	"sizetype"
.LASF25:
	.string	"VM_memory"
.LASF13:
	.string	"long long int"
.LASF15:
	.string	"offset"
.LASF1:
	.string	"short int"
.LASF21:
	.string	"instr"
.LASF20:
	.string	"halted"
.LASF8:
	.string	"uint32_t"
.LASF4:
	.string	"long int"
.LASF24:
	.string	"funct"
.LASF0:
	.string	"signed char"
.LASF23:
	.string	"shamt"
	.ident	"GCC: (Ubuntu 4.8.4-2ubuntu1~14.04) 4.8.4"
	.section	.note.GNU-stack,"",@progbits
